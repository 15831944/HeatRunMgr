#ifndef _SIMPLELIST_H_
#define _SIMPLELIST_H_

//释放时连内部数据一起释放开关( 1―链表模块帮忙Free 0―外部功能自己Free )
//#define LIST_FREEDATA   0
#define LIST_FREEDATA   1

/* 声明一个链表节点结构体 */
typedef struct Node SmpNode;
typedef struct Node *pSmpNode;

//单向链表节点结构体
struct Node
{
	//数据域
	void* data;
    //指针域
	pSmpNode next;
};


/**********************************************************
功能:
		初始化链表,并建立第一个节点
时间:
		2011.02.12
参数:		 
		data---是准备添加到链表节点的数据(如果是NULL,则代表要申请空内容的链表)
修改人:
		alian
返回值:
		 成功返回节点的头指针
***********************************************************/
pSmpNode SMPLIST_init(void *data);


/**********************************************************
功能:
		增加数据到链表中
时间:
		2011.02.12
参数:		 
		data---准备添加到链表节点的数据
		head---被添加的链表头指针
修改人:
		alian
返回值:
		成功返回1  失败返回0
***********************************************************/
short int SMPLIST_addnode(void *data,void *head);


/**********************************************************
功能:
		获取链表中下标为index的节点
时间:
		2011.02.12
参数:		 
		index---链表中节点的位置下标
		head---被查讯的链表头指针
修改人:
		alian
返回值:
		对应index下标的节点 没找到返回NULL
***********************************************************/
pSmpNode SMPLIST_getnode(int index,void *head);


/**********************************************************
功能:
		统计链表的节点个数
时间:
		2011.02.12
参数:		 
		head---被添加的链表头指针
修改人:
		alian
返回值:
		返回链表的节点个数 
***********************************************************/
int SMPLIST_nodesum(void *head);


/**********************************************************
功能:
		从链表中删除下标未index的节点
时间:
		2011.02.12
参数:	
		index---链表中节点的位置下标
		head---被删除节点所在的链表的头指针
修改人:
		alian
返回值:
		返回链表的头指针
***********************************************************/
pSmpNode SMPLIST_nodedel(int index,pSmpNode head);


/**********************************************************
功能:
		释放链表节点空间
时间:
		2011.02.12
参数:		 
		head---要开始释放的节点指针
修改人:
		alian
返回值:
		失败返回0    成功返回1
***********************************************************/
short int SMPLIST_free(void *head);


#endif  //_SIMPLELIST_H_
